CREATE OR REPLACE PROCEDURE "ELEMENT5_DB"."ELEMENT5_DB_SCHEMA".INTERVENTIONS_API_UPDATE(DATABASE_NAME VARCHAR,TENANT_NAME VARCHAR,TRANSACTION_ID VARCHAR,INTERVENTIONS_ID VARCHAR,SRC_UPDATED_BY VARCHAR,STATUS VARCHAR,ACTION_REQUIRED VARCHAR,PROCESS_ID VARCHAR)
  RETURNS VARCHAR
  LANGUAGE javascript
  EXECUTE AS OWNER
AS
--LOADING DATA FROM FILE TO TRANSACTIONS_FACT_DETAILS TABLE
$$
try
{

var INTERVENTIONS_ID = INTERVENTIONS_ID;
var INTERVENTION_CODES = '';
INTERVENTIONS_ID.split(',').forEach((c, i) => INTERVENTION_CODES += `${i > 0 ? ',' : ''}'${c}'`);
var SCHEMA_NAME = TENANT_NAME;
var DB_NAME = DATABASE_NAME;
var ACTION_REQUIRED = ACTION_REQUIRED;

snowflake.execute ({sqlText: `BEGIN TRANSACTION`}); 

snowflake.execute ({sqlText: `CREATE OR REPLACE TEMPORARY TABLE `+ DB_NAME+`.`+SCHEMA_NAME+`.INTERVENTION_DETAILS_TEMPORARY AS SELECT 
INTERVENTIONS_ID,ERROR_CODE,KEY,VALUE,REASON,RECEIVED_TIMESTAMP,SRC_UPDATED_AT,SRC_UPDATED_BY,
TRANSACTION_ID,STAGE_ID,UPDATED_AT,UPDATED_BY,INTERVENTION_STATUS,LATEST_INTERVENTION_FLAG,REQUIRED_ACTIONS,FB_ID,
ACTIVITY_ID,PROCESS_ID,PROCESS_RUN_ID,ATTRIBUTES_INPUT_JSON
FROM `+ DB_NAME+`.`+SCHEMA_NAME+`."INTERVENTIONS_DETAILS" WHERE 
INTERVENTION_RUN_ID IN(`+INTERVENTION_CODES+`) AND TRANSACTION_ID = '`+TRANSACTION_ID+`' AND PROCESS_ID = '`+PROCESS_ID+`'`
}); 

var my_sql_command = snowflake.execute ({sqlText: `SELECT COUNT(*) FROM `+ DB_NAME+`.`+SCHEMA_NAME+`.INTERVENTION_DETAILS_TEMPORARY `});
	my_sql_command.next();
    if ((my_sql_command.getColumnValue(1)) < 1 )
        {
            
            
            Err_Msg ="Err_200: Intervention Details Not Found in DB";
            
			snowflake.execute({ sqlText: `insert into "ELEMENT5_DB"."ELEMENT5_DB_SCHEMA"."AUTOHUB_AUDIT_ERROR_TABLE"(ERROR_CODE,ERROR_STATE,
            ERROR_MESSAGE,ERROR_LINE,Stored_Procedure_Name,TENANT_NAME,FILE_NAME,CUSTOM_ERR_CODE,DB_NAME,CUSTOM_ERR_MESSAGE) 
            VALUES (?,?,?,?,?,?,?,?,?,?)`,binds: ['Err_200', '200', Err_Msg, '',
            'INTERVENTIONS_API_UPDATE',SCHEMA_NAME,'INTERVENTIONS_API','Err_200',DB_NAME,Err_Msg]});
			
            
			snowflake.execute({ sqlText:`select "ELEMENT5_DB"."ELEMENT5_DB_SCHEMA".AUTO_HUB_2_0_ALERT_EXTERNAL_FUNCTION (object_construct(*)) FROM ELEMENT5_DB_DB.ELEMENT5_DB_DB_SCHEMA.AUTOHUB_AUDIT_ERROR_TABLE_STREAM;`});
	
			snowflake.execute({ sqlText:`Insert into "ELEMENT5_DB"."ELEMENT5_DB_SCHEMA".JUNK_STREAM_TABLE select $1 from ELEMENT5_DB_DB.ELEMENT5_DB_DB_SCHEMA.AUTOHUB_AUDIT_ERROR_TABLE_STREAM where false; `});
        
			return 'INTERVENTION_DETAILS_NOT_FOUND';
        
        }


	if(ACTION_REQUIRED == 'UNDO')
	{	
		snowflake.execute ({sqlText: `UPDATE `+ DB_NAME+`.`+SCHEMA_NAME+`."INTERVENTIONS_DETAILS" SET LATEST_INTERVENTION_FLAG ='N' WHERE
		(TRANSACTION_ID,INTERVENTIONS_ID,SRC_UPDATED_AT,PROCESS_ID) IN (SELECT TRANSACTION_ID,INTERVENTIONS_ID, MAX(SRC_UPDATED_AT) SRC_UPDATED_AT, PROCESS_ID
		FROM `+ DB_NAME+`.`+SCHEMA_NAME+`.INTERVENTIONS_DETAILS WHERE 
		TRANSACTION_ID ='`+TRANSACTION_ID+`' AND PROCESS_ID ='`+PROCESS_ID+`' AND LATEST_INTERVENTION_FLAG='Y' AND INTERVENTIONS_ID IN(
		select DISTINCT INTERVENTIONS_ID FROM `+ DB_NAME+`.`+SCHEMA_NAME+`.INTERVENTIONS_DETAILS WHERE 
		INTERVENTION_RUN_ID IN(`+INTERVENTION_CODES+`) AND PROCESS_ID ='`+PROCESS_ID+`') GROUP BY INTERVENTIONS_ID,TRANSACTION_ID,PROCESS_ID)
		AND LATEST_INTERVENTION_FLAG ='Y' AND PROCESS_ID ='`+PROCESS_ID+`'`
		});
    }		

snowflake.execute ({sqlText: `UPDATE `+ DB_NAME+`.`+SCHEMA_NAME+`."INTERVENTIONS_DETAILS" SET LATEST_INTERVENTION_FLAG ='N' WHERE 
TRANSACTION_ID = '`+TRANSACTION_ID+`' AND INTERVENTION_RUN_ID IN(`+INTERVENTION_CODES+`)
AND LATEST_INTERVENTION_FLAG ='Y' AND PROCESS_ID = '`+PROCESS_ID+`'`
}); 

snowflake.execute({sqlText: `INSERT INTO `+ DB_NAME+`.`+SCHEMA_NAME+`."INTERVENTIONS_DETAILS"(INTERVENTION_RUN_ID,INTERVENTIONS_ID,ERROR_CODE,
KEY,VALUE,REASON,RECEIVED_TIMESTAMP,SRC_UPDATED_AT,SRC_UPDATED_BY,
TRANSACTION_ID,STAGE_ID,UPDATED_AT,UPDATED_BY,INTERVENTION_STATUS,LATEST_INTERVENTION_FLAG,REQUIRED_ACTIONS,FB_ID,
ACTIVITY_ID,PROCESS_ID,PROCESS_RUN_ID,ATTRIBUTES_INPUT_JSON)
SELECT uuid_string() AS INTERVENTION_RUN_ID,INTERVENTIONS_ID,ERROR_CODE,
KEY,VALUE,REASON,RECEIVED_TIMESTAMP,convert_timezone('UTC',current_timestamp()),'`+SRC_UPDATED_BY+`',
TRANSACTION_ID,STAGE_ID,CURRENT_TIMESTAMP(),'API-User','`+STATUS+`','Y',REQUIRED_ACTIONS,FB_ID,
ACTIVITY_ID,PROCESS_ID,PROCESS_RUN_ID,ATTRIBUTES_INPUT_JSON
FROM  `+ DB_NAME+`.`+SCHEMA_NAME+`."INTERVENTION_DETAILS_TEMPORARY";`
});


 snowflake.execute ({sqlText: `COMMIT`});
       
 return 'DATA_LOADED_SUCCESSFULLY';  

}
catch(err)
{
  snowflake.execute ({sqlText: `ROLLBACK`});
  return 'DATA load failed: ' + err;
}
$$;

grant usage on procedure ELEMENT5_DB.ELEMENT5_DB_SCHEMA.INTERVENTIONS_API_UPDATE(VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR) 
TO ROLE SF_PROD_USER; 
